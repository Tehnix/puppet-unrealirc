#!/bin/sh

# unreal Start/stop the Unreal IRC server.

### BEGIN INIT INFO
# Provides:          ircd
# Required-Start:    $syslog
# Required-Stop:     $syslog
# Should-Start:      $local_fs $network $named
# Should-Stop:       $local_fs $network $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: UnrealIRCd daemon init.d script
# Description:       Use to manage the UnrealIRCd daemon.
### END INIT INFO

PATH=/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=<%= scope.lookupvar('unrealirc::install_path') %>/src/ircd
NAME="UnrealIRCd (<%= scope.lookupvar('unrealirc::servername') %>)"
USER=<%= scope.lookupvar('unrealirc::user') %>
GROUP=<%= scope.lookupvar('unrealirc::group') %>
PIDFILE=<%= scope.lookupvar('unrealirc::pidfile') %>

test -f $DAEMON || exit 0

set -e


case "$1" in
  start)
        PID=`ps -e | grep ircd | awk '{ print $1 }'`
        if [ -z $PID ] ; then
          echo -n "Starting $NAME with pid $PIDFILE"
          start-stop-daemon --oknodo --start --quiet --exec $DAEMON \
                --user $USER -c $USER --pidfile "$PIDFILE" > /dev/null
          echo "."
        else
          echo "ERROR: $NAME is already running on pid $PID..."
          exit 1
        fi

        break
        ;;
  stop)
        if [ ! -r $PIDFILE ] ; then
          echo "ERROR: $NAME is not running"
          exit 1
        fi
        echo -n "Stopping $NAME"
        start-stop-daemon --pidfile "$PIDFILE" --oknodo --stop --quiet \
               --signal 15 --exec $DAEMON
        rm $PIDFILE
        echo "."
        break
        ;;
  status)
        PID=`ps -e | grep ircd | awk '{ print $1 }'`
        if [ -z $PID ] ; then
          echo "$NAME is not running."
        else
          echo "$NAME is running on pid $PID..."
        fi
        break
        ;;

  rehash)
        echo "Rehashing UnrealIRCd"
        if [ ! -r $PIDFILE ] ; then
          echo "ERROR: UnrealIRCd is not running"
          exit 1
        fi
        kill -1 `cat $PIDFILE`
        echo "."
        break
        ;;
  restart|force-reload)
        echo -n "Restarting $NAME"
        if [ -f $PIDFILE ]; then
          start-stop-daemon --stop --oknodo --quiet --pidfile "$PIDFILE" --signal 15 --exec $DAEMON
          rm $PIDFILE
          sleep 1
        fi
        start-stop-daemon --start --oknodo --quiet --user $USER -c $USER \
              --pidfile "$PIDFILE" --exec $DAEMON > /dev/null
        echo "."
        break
        ;;
  *)
        echo "Usage: $0 {start|stop|restart|rehash|force-reload}" >&2
        exit 0
        ;;
esac

exit 0